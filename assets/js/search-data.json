{
  
    
        "post0": {
            "title": "셀레늄",
            "content": "from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from bs4 import BeautifulSoup import requests url = &#39;http://www.yes24.com/Main/default.aspx&#39; driver = webdriver.Chrome() driver.get(url) elem = driver.find_element(By.ID, &#39;query&#39;) elem.send_keys(&#39;파이썬&#39;) elem = driver.find_element(By.XPATH, &#39;//*[@id=&quot;yesSForm&quot;]/fieldset/span[2]/button&#39;) #elem.send_keys(Keys.ENTER) elem.click() . C: Users kilah anaconda3 lib site-packages requests __init__.py:89: RequestsDependencyWarning: urllib3 (1.26.7) or chardet (3.0.4) doesn&#39;t match a supported version! warnings.warn(&#34;urllib3 ({}) or chardet ({}) doesn&#39;t match a supported &#34; . # 데이터 가져오기 soup = BeautifulSoup(driver.page_source, &#39;lxml&#39;) book_list = soup.find(&#39;ul&#39;, attrs={&#39;id&#39;: &#39;yesSchList&#39;}) books = book_list.find_all(&#39;li&#39;) for i, book in enumerate(books) : title = book.find(&#39;a&#39;, attrs={&#39;class&#39; : &#39;gd_name&#39;}) price = book.find(&#39;strong&#39;, attrs={&#39;class&#39; : &#39;txt_num&#39;}) rating = book.select(&#39;span.rating_grade em&#39;) if not rating : continue if float(rating[0].get_text()) &lt; 9.6 : continue print(title.get_text(), price.get_text(), rating[0].get_text()) . Do it! 점프 투 파이썬 16,920원 9.6 혼자 공부하는 머신러닝+딥러닝 23,400원 10.0 Do it! 점프 투 파이썬 + Do it! 파이썬 생활 프로그래밍 34,920원 9.6 파이썬 코딩의 기술(개정2판) 28,800원 9.6 Do it! 자료구조와 함께 배우는 알고리즘 입문 : 파이썬 편 19,800원 9.6 Do it! 점프 투 파이썬 + Do it! 자료구조와 함께 배우는 알고리즘 입문 : 파이썬 편 + Do it! 파이썬 생활 프로그래밍 54,720원 9.6 Do it! 점프 투 파이썬 + Do it! 첫 파이썬 29,520원 9.6 Do it! 첫 파이썬 12,600원 9.7 파이썬 증권 데이터 분석 28,800원 9.6 쉽게 따라 만드는 파이썬 주식 자동매매 시스템 25,200원 9.6 모두의 인공지능 with 파이썬 19,800원 10.0 .",
            "url": "https://idavidyou.github.io/myblog/selenium/python/2021/12/08/selenium.html",
            "relUrl": "/selenium/python/2021/12/08/selenium.html",
            "date": " • Dec 8, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "멜론 최신곡 검색",
            "content": "1) 멜론 사이트에서 국내 최신곡 10위까지의 정보를 노래제목, 가수, 앨범, 좋아요 수를 출력하시오 . url = &#39;https://www.melon.com/new/index.htm&#39; | . tables = pd.read_html(requests.get(url, headers={&#39;User-agent&#39;: &#39;Mozilla/5.0&#39;}).text, attrs={&quot;class&quot;:&quot;tabelle_grafik&quot;})[0] . import pandas as pd import requests from bs4 import BeautifulSoup url =&#39;https://www.melon.com/new/index.htm&#39; headers = {&#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36&#39;} table = pd.read_html(requests.get(url, headers=headers).text) table[0] . Unnamed: 0 NO 앨범이미지 곡 상세가기 곡정보 앨범 좋아요 듣기 담기 다운 뮤비 . 0 NaN | 1위 | NaN | 곡정보 | 어쩜 이승환, 선우정아 | 어쩜 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 1 NaN | 2위 | NaN | 곡정보 | Lovelylove (Feat. 최낙타) 요다영 | Lovelylove | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 2 NaN | 3위 | NaN | 곡정보 | YOU 아티(arty) | YOU | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 3 NaN | 4위 | NaN | 곡정보 | 우리가 반짝이는 순간 훈스 (HOONS) | 우리가 반짝이는 순간 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 4 NaN | 5위 | NaN | 곡정보 | Wake up (feat. DJ Wegun) Untell (언텔) | Wake up (feat. DJ Wegun) | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 5 NaN | 6위 | NaN | 곡정보 | 그래요 (Prod. MeQue) 라 블랑캣 (La Blancat) | 그래요 (Prod. MeQue) | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 6 NaN | 7위 | NaN | 곡정보 | 잘가요 내사랑 정동원 | 그리움, 아낌없이 주는 나무 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 7 NaN | 8위 | NaN | 곡정보 | 언제나 우리 그대로 암호 (AMHO) | The Piece | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 8 NaN | 9위 | NaN | 곡정보 | LIGHTNING (번개) (Feat. JINBO) TAEO, LVPS | The WEATHER Project | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 9 NaN | 10위 | NaN | 곡정보 | JENGA OVCOCO (오브코코) | JENGA | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 10 NaN | 11위 | NaN | 곡정보 | 보내 오현란 | 두 번째 남편 OST Part.6 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 11 NaN | 12위 | NaN | 곡정보 | Kitty (Feat. 미연 ((여자)아이들) Kid Milli, dress | Kitty (Feat. 미연 ((여자)아이들) | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 12 NaN | 13위 | NaN | 곡정보 | 더는 볼 수 없겠지 (feat.모닝커피) 하진우 | 더는 볼 수 없겠지 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 13 NaN | 14위 | NaN | 곡정보 | 물거품 (Mermaid) 도우진 | 푸른야생마: 바다로 가는 길 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 14 NaN | 15위 | NaN | 곡정보 | 연희동에 찾아와요 조여래 | 연희동에 찾아와요 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 15 NaN | 16위 | NaN | 곡정보 | Flashing Lights (Feat. The Deep) 이람 | Self-Titled EP | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 16 NaN | 17위 | NaN | 곡정보 | 어때? (Feat. 영운, 혜빈) Flospoon | 어때? | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 17 NaN | 18위 | NaN | 곡정보 | 너라는 바람이 난 좋아 굴뚝새 | 너라는 바람이 난 좋아 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 18 NaN | 19위 | NaN | 곡정보 | My everything 이정 | My everything | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 19 NaN | 20위 | NaN | 곡정보 | 그대가 부네요 (With 김필) Ecobridge | 그대가 부네요 (With 김필) | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 20 NaN | 21위 | NaN | 곡정보 | Life 윤상미X윤혜진 | HOLIDAY | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 21 NaN | 22위 | NaN | 곡정보 | 우리가 어떻게 헤어져 갓튼 (Godton) | 우리가 어떻게 헤어져 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 22 NaN | 23위 | NaN | 곡정보 | Hold me like the ocean 혁기 (hucki) | Underwater | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 23 NaN | 24위 | NaN | 곡정보 | Born Again Z-SANG (지상) | Born Again | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 24 NaN | 25위 | NaN | 곡정보 | 이 나이 먹고 뭐했길래 (Feat. 정슬기, 칸토) 미스에스 | 이 나이 먹고 뭐했길래 (TEN PROJECT Part.7) | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 25 NaN | 26위 | NaN | 곡정보 | 대기실 싸이퍼 Yonge Jaundice (영 잔디스), PULLIK (박준호),... | 대기실 싸이퍼 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 26 NaN | 27위 | NaN | 곡정보 | All I Need 젬마(JEMMA) | 멜랑꼴리아 OST Part 1 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 27 NaN | 28위 | NaN | 곡정보 | Follow 김슬옹, 데이비드 오 | Follow | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 28 NaN | 29위 | NaN | 곡정보 | 너의 사랑이 날 웃게 해 이민혁 | 너의 사랑이 날 웃게 해 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 29 NaN | 30위 | NaN | 곡정보 | DAYDREAM Jessica (제시카) | 제시카 &amp; 크리스탈 - US로드트립 OST Part.3 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 30 NaN | 31위 | NaN | 곡정보 | 너로 가득한 하루 위아영 (WeAreYoung) | 너로 가득한 하루 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 31 NaN | 32위 | NaN | 곡정보 | 어느 60대 노부부 이야기 이상, 고영열 | 풍류대장 - 힙한 소리꾼들의 전쟁 Episode.7 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 32 NaN | 33위 | NaN | 곡정보 | 산정호수의 밤 임형주 | Lost In Time(잃어버린 시간 속으로) | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 33 NaN | 34위 | NaN | 곡정보 | 흰 양말 전자양 | 흰 양말 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 34 NaN | 35위 | NaN | 곡정보 | 좋아좋아 (Feat.최아인) 민지 | 좋아좋아 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 35 NaN | 36위 | NaN | 곡정보 | 빨간 mong_gle (몽글) | 빨간 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 36 NaN | 37위 | NaN | 곡정보 | 사랑이 늦어서 미안해 IN THE CITY (인 더 시티) | PLAYBACK #5 &#39;사랑이 늦어서 미안해&#39; | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 37 NaN | 38위 | NaN | 곡정보 | 별의 조각 윤하 (YOUNHA) | YOUNHA 6th Album &#39;END THEORY&#39; | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 38 NaN | 39위 | NaN | 곡정보 | 서로의 서로 적재 | 서로의 서로 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 39 NaN | 40위 | NaN | 곡정보 | 남아있어 (feat. Horim) 제이스틴 (ZAYSTIN) | 남아있어 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 40 NaN | 41위 | NaN | 곡정보 | GROW UP bobae | GROW UP | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 41 NaN | 42위 | NaN | 곡정보 | 생각의 역습 전남친, 디핵 (D-Hack) | 생각의 역습 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 42 NaN | 43위 | NaN | 곡정보 | 아직 잊을 수가 없어서 (Feat. 리디아) 더 라임 | 아직 잊을 수가 없어서 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 43 NaN | 44위 | NaN | 곡정보 | Sequence One Off Them | Sequence | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 44 NaN | 45위 | NaN | 곡정보 | It&#39;s Cold (feat. BOiTELLO) Aden (에이든) | It&#39;s Cold | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 45 NaN | 46위 | NaN | 곡정보 | 나보다 너를 더 (Feat. Mingginyu) Bas Bao (바스바오) | 나보다 너를 더 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 46 NaN | 47위 | NaN | 곡정보 | Fly 강다니엘, 챈슬러 | 싸이월드 BGM 2021 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 47 NaN | 48위 | NaN | 곡정보 | CALL ME BACK (Feat. OLNL, YEYEBEEN) PEAXE MARKET | CALL ME BACK | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 48 NaN | 49위 | NaN | 곡정보 | 지나갈거야 BigDD N SoulPowder | 지나갈거야 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . 49 NaN | 50위 | NaN | 곡정보 | 별빛을 따라 ODD-CAT (오드캣) | 별빛을 따라 | 좋아요 총건수 0 | 듣기 | 담기 | 다운로드 | 뮤직비디오 | . # 가수 : div rank02 # 앨범 : div rank03 # 좋아요 : span cnt import requests from bs4 import BeautifulSoup url =&#39;https://www.melon.com/new/index.htm&#39; headers = {&#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36&#39;} response = requests.get(url, headers=headers) response.raise_for_status() soup = BeautifulSoup(response.text, &#39;html.parser&#39;) all_song = soup.find_all(&#39;tr&#39;) for i, song in enumerate(all_song) : #print(song) title = song.find_all(&#39;div&#39;, attrs={&#39;class&#39; : &#39;rank01&#39;}) if len(title) == 0 : continue if i &gt;10 : break title = title[0].a.get_text() print(i, title, end=&#39; &#39;) singer = song.find_all(&#39;div&#39;, attrs={&#39;class&#39; : &#39;rank02&#39;}) singer = singer[0].a.get_text() print(singer, end=&#39; &#39;) album = song.find_all(&#39;div&#39;, attrs={&#39;class&#39; : &#39;rank03&#39;}) album = album[0].a.get_text() print(&#39;, 앨범명:&#39;, album) . 1 어쩜 이승환 , 앨범명: 어쩜 2 Lovelylove (Feat. 최낙타) 요다영 , 앨범명: Lovelylove 3 YOU 아티(arty) , 앨범명: YOU 4 우리가 반짝이는 순간 훈스 (HOONS) , 앨범명: 우리가 반짝이는 순간 5 Wake up (feat. DJ Wegun) Untell (언텔) , 앨범명: Wake up (feat. DJ Wegun) 6 그래요 (Prod. MeQue) 라 블랑캣 (La Blancat) , 앨범명: 그래요 (Prod. MeQue) 7 잘가요 내사랑 정동원 , 앨범명: 그리움, 아낌없이 주는 나무 8 언제나 우리 그대로 암호 (AMHO) , 앨범명: The Piece 9 LIGHTNING (번개) (Feat. JINBO) TAEO , 앨범명: The WEATHER Project 10 JENGA OVCOCO (오브코코) , 앨범명: JENGA . 2) 네이버에서 bts이미지를 검색한 후 나온 결과 중 5개의 이미지를 저장 . url = &#39;https://search.naver.com/search.naver?where=image&amp;sm=tab_jum&amp;query=bts&#39; | . import os import time import requests from bs4 import BeautifulSoup from selenium import webdriver driver = webdriver.Chrome() url =&#39;https://search.naver.com/search.naver?where=image&amp;sm=tab_jum&amp;query=bts&#39; headers = {&#39;User-Agent&#39; : &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36&#39;} # 셀레늄을 이용하여 특정 사이트로 이동한 후 1초동안 대기 driver.get(url) time.sleep(1) soup = BeautifulSoup(driver.page_source) bts_imgs = soup.find_all(&#39;img&#39;, attrs={&#39;class&#39; : &#39;_image _listImage&#39;}) print(&#39;그림의 개수 :&#39;, len(bts_imgs)) # 첫 화면에 보이는 이미지의 개수=&gt; 더 많음 # 이미지 저장할 폴더 생성 img_dir = &#39;./bts_img/&#39; if not os.path.exists(img_dir) : # 디렉토리가 없으면 생성 os.makedirs(img_dir) print(&#39;폴더 생성&#39;) else : print(&#39;폴더가 존재함&#39;) for i, image in enumerate(bts_imgs) : img_url = image[&#39;src&#39;] if(not img_url.startswith(&#39;http&#39;)) : continue img_src = requests.get(img_url, headers=headers) img_src.raise_for_status() with open(img_dir + &#39;bts_{}.jpg&#39;.format(i), &#39;wb&#39;) as f: print(img_url) f.write(img_src.content) if i &gt;= 10 : break; print(&#39;BTS 사진 저장 완료&#39;) . 그림의 개수 : 50 폴더가 존재함 https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.pinimg.com%2F736x%2Ff5%2F82%2F21%2Ff5822169011e5066f0064be0839718f9.jpg&amp;type=a340 https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.pinimg.com%2F736x%2Fc5%2F7a%2Fb9%2Fc57ab924dc00bfce55807cab3eb83104.jpg&amp;type=a340 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F018%2F2021%2F11%2F19%2F0005089810_001_20211119144701057.jpg&amp;type=a340 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F032%2F2021%2F11%2F20%2F0003111362_001_20211120093901154.jpg&amp;type=a340 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F117%2F2021%2F11%2F17%2F202111171317786542_1_20211117131804387.jpg&amp;type=a340 https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.pinimg.com%2F736x%2F03%2F31%2Fd7%2F0331d7eb5eebdb3bfd135b42b9b3a101.jpg&amp;type=ofullfill340_600 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F277%2F2021%2F11%2F19%2F0005002387_001_20211119143001771.jpg&amp;type=a340 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F003%2F2021%2F11%2F17%2FNISI20211117_0018165248_web_20211117132733_20211117132806271.jpg&amp;type=a340 https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.pinimg.com%2F736x%2F09%2F27%2F56%2F092756d74752e775107715aed87d9f6a.jpg&amp;type=ofullfill340_600 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F5526%2F2021%2F11%2F20%2F0000290291_001_20211120113202901.png&amp;type=a340 https://search.pstatic.net/common/?src=http%3A%2F%2Fimgnews.naver.net%2Fimage%2F003%2F2021%2F11%2F16%2FNISI20211116_0000870028_web_20211116090333_20211116091905465.jpg&amp;type=ofullfill340_600 BTS 사진 저장 완료 . temp1 = &quot;http://www.naver.com&quot; temp2 = &quot;http://www.daum.net&quot; print(temp1.startswith(&#39;http&#39;)) print(temp2.startswith(&#39;http&#39;)) print(temp1.endswith(&#39;com&#39;)) print(temp2.endswith(&#39;com&#39;)) . True True True False . pip install selenium pip show selenium 구글에서 &quot;chrome://version&quot; chromedriver를 검색해서 자신의 크롬 프로그램 버전에 맞는 chromedriver를 다운로드 받는다. 압축 해제 .",
            "url": "https://idavidyou.github.io/myblog/crawling/python/2021/12/08/melon.html",
            "relUrl": "/crawling/python/2021/12/08/melon.html",
            "date": " • Dec 8, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "쇼핑 리스트",
            "content": "Black Friday란? . 블랙 프라이 데이는 미국의 연말 세일에서 기인한 용어이다. . 블랙 프라이데이 세일 하는 사이트 모음 . 아마존 | 11번가 | 쿠팡 | 지마켓 | .",
            "url": "https://idavidyou.github.io/myblog/python/2021/12/08/Tomorrow.html",
            "relUrl": "/python/2021/12/08/Tomorrow.html",
            "date": " • Dec 8, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "파이썬 리스트",
            "content": "Python List란? . 파이썬의 Collection에는 4가지가 있다. 오늘은 그중 List . Collection의 종류 . List | Dictionary | Tuple | Set | .",
            "url": "https://idavidyou.github.io/myblog/python/2021/12/08/Today.html",
            "relUrl": "/python/2021/12/08/Today.html",
            "date": " • Dec 8, 2021"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://idavidyou.github.io/myblog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I’m a student who wants to make value. Then you can ask me ‘what is value?’ I think you can understand it when you look around my blog. 😀 . 😀 What I’m interested in: . :ledger: What I can do . Python | Pandas, Numpy를 이용한 데이터 분석 | 파이썬 기반 시각화 | 파이썬 기반 머신러닝 | . :ledger: Interests . Books | Music | Netflix . | :telephone_receiver: Contact | :e-mail: E-mail | . :chart_with_upwards_trend: github . My github link :mag_right: | . :star: Quora: Follow me on Quora. My profile is here. .",
          "url": "https://idavidyou.github.io/myblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://idavidyou.github.io/myblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}